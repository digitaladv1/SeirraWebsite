"use strict";let ife=!0;{function a(a){window.c3_postToMessagePort(a)}function b(b){r||(a({from:"runtime",type:"closed",screenX:window.screenX,screenY:window.screenY}),b&&window.nw.Window.get().close(!0))}function c(a){return new Promise((b,c)=>{let d=document.createElement("script");d.onload=b,d.onerror=c,d.async=!1,d.src=a,document.head.appendChild(d)})}function d(a){return new Promise((b,c)=>{let d=document.createElement("link");d.onload=b,d.onerror=c,d.rel="stylesheet",d.href=a,document.head.appendChild(d)})}function e(a){if(p=a.runtime,q=a.useWorker,q&&"undefined"==typeof OffscreenCanvas&&(console.log("[C3 runtime] Ignored setting to use worker since OffscreenCanvas is not supported"),q=!1),document.title=a.title,ife=!!a.ife,"c3"===p&&(document.title+=" (C3 runtime)"+(q?" [worker]":"")),document.body.style.backgroundColor=a.backgroundColor,document.documentElement.style.backgroundColor=a.backgroundColor,a.icon){let b=document.createElement("link");b.rel="icon",b.type="image/png",b.href=URL.createObjectURL(a.icon),document.head.appendChild(b)}}function f(a){const b=a.projectFiles;window.cr_previewProjectFileBlobs=b;const c={};for(let[d,e]of Object.entries(b))c[d]=URL.createObjectURL(e);window.cr_previewProjectFiles=c;let e=g(a.webFonts,c);if(e){let a=new Blob([e],{type:"text/css"});m.push(d(URL.createObjectURL(a)))}}function g(a,b){let c="";for(let[d,e]of Object.entries(a)){c+=`@font-face {
font-family: '${d}';
src: `;for(let a,d=0,f=e.length;d<f;++d){if(a=e[d].url,b.hasOwnProperty(a))a=b[a];else continue;let g=e[d].format;c+=`url('${a}')`,g&&(c+=` format('${g}')`),c+=d===f-1?";":", "}c+="\n}\n\n"}return c}function h(a){const b=a.imageFiles;window.cr_previewImageBlobs=b;const c={};for(const[d,e]of Object.entries(b))c[d]=URL.createObjectURL(e);window.cr_remotePreviewImageFiles=c}function i(a){n=a.engineScripts,o=a.bootScripts,window.cr_previewProjectDataBlob=a.projectData,window.cr_previewProjectDataUrl=URL.createObjectURL(a.projectData),a.opusWasmScript&&(window.cr_opusWasmScriptUrl=a.opusWasmScript),a.opusWasmBinary&&(window.cr_opusWasmBinaryUrl=a.opusWasmBinary),a.opusAsmScript&&(window.cr_opusAsmScriptUrl=a.opusAsmScript),a.opusAsmBinary&&(window.cr_opusAsmBinaryUrl=a.opusAsmBinary),a.jquery&&m.push(c("c2/"+a.jquery));for(const b of a.remoteScripts)m.push(c(b));for(const b of a.externalCss){let a=b;b instanceof Blob&&(a=URL.createObjectURL(b)),m.push(d(a))}if("c2"===p)return j(a);if("c3"===p)return k(a);throw new Error("invalid runtime")}function j(a){for(let b of n)if("<script-dependencies>"===b)for(let b of a.dependencyScripts){let a=b;b instanceof Blob&&(a=URL.createObjectURL(b)),m.push(c(a))}else if("<shaders>"===b)m.push(c(URL.createObjectURL(a.shaders)));else if("<plugin-and-behavior-scripts>"===b){for(const b of a.pluginScripts){let a=b;a instanceof Blob&&(a=URL.createObjectURL(a)),m.push(c(a))}for(const b of a.behaviorScripts){let a=b;a instanceof Blob&&(a=URL.createObjectURL(a)),m.push(c(a))}}else"<objrefs>"===b?m.push(c(URL.createObjectURL(a.objRefTable))):m.push(c(b));return Promise.all(m).then(()=>c("c2/start-preview.js"))}function k(a){const b=[];for(let d of n)if("<script-dependencies>"===d){if(!q)for(let b of a.dependencyScripts){let a=b;b instanceof Blob&&(a=URL.createObjectURL(b)),m.push(c(a))}}else if("<objrefs>"===d)b.push(URL.createObjectURL(a.objRefTable)),b.push(URL.createObjectURL(a.expFuncTable));else if("<shaders>"===d)m.push(c(URL.createObjectURL(a.shaders)));else if("<plugin-and-behavior-scripts>"===d){for(const c of a.pluginScripts){let a=c;a instanceof Blob&&(a=URL.createObjectURL(a)),b.push(a)}for(const c of a.behaviorScripts){let a=c;a instanceof Blob&&(a=URL.createObjectURL(a)),b.push(a)}}else b.push(d);window.cr_allEngineScripts=b,window.cr_useWorker=q,window.cr_workerDependencyScripts=q?a.dependencyScripts:[];const d=[];for(let b of o)"<domside-scripts>"===b?a.domSideScripts.forEach(a=>{let b=a;b instanceof Blob&&(b=URL.createObjectURL(b)),d.push(c(b))}):d.push(c(b));return Promise.all(d)}function l(a){r=!0,a.isDebug?location.href=a.url:location.reload(!1)}let m=[],n=[],o=[],p="",q=!1,r=!1,s=!!window.c3_isDebugFrame;window.c3_addPortMessageHandler(function(a){const b=a.type;"meta"===b?e(a):"data"===b?f(a):"images"===b?h(a):"scripts"===b?i(a):"reload"===b?l(a):"close-window"===b?window.close():!s&&console.warn("[Preview] Unknown message: "+b)}),window.addEventListener("resize",()=>{a({from:"runtime",type:"resize",width:window.innerWidth,height:window.innerHeight})}),window.nw&&window.nw.Window?window.nw.Window.get().on("close",()=>b(!0)):window.addEventListener("unload",()=>b(!1)),window.addEventListener("wheel",a=>{a.ctrlKey&&a.preventDefault()})}